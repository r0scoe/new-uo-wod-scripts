use os;
use uo;
use npc;
use util;
use cfgfile;

include "include/client";
include "include/objtype";
include "include/eventid";
include "include/spawn";
include "include/attributes";
include "include/npcbackpacks";
include "../pkg/npcs/speech";
include "../pkg/npcs/npc_util";
include "../pkg/npcs/npcinfo";
include "../pkg/npcs/main_ai/setup/setup";
include ":contextMenus:contextMenus";

program banker_AI();
	if (me.name ["<random>"])
		DoOnCreationSetup ();
	endif
	SetUpSpeech ();

	EnableEvents (SYSEVENT_ENGAGED + SYSEVENT_DAMAGED, 20);
	EnableEvents (SYSEVENT_SPEECH + SYSEVENT_ITEM_GIVEN, 20);
	WalkHome ();

	while (me)
		if (me.hidden)
			me.hidden := 0;
		endif

    		var ev := os::wait_for_event( 120 );
		if (ev and ev.type == EVID_CONTEXT_MENU)
			var newev := struct;
			newev.+type := EVID_SPEECH;
			newev.+source := ev.source;
			newev.+text := "";
			case (ev.result)
				eCMR_Bank: newev.text := "bank";
				eCMR_CheckBalance: newev.text := "account";
			endcase
			sendevent (me, newev);
    		elseif (ev and ev.type == EVID_SPEECH and !ev.source.npctemplate)
			var evtext := lower(ev.text);
			if (evtext["bank"])
				if(evtext["vendor"] or evtext["guard"] or evtext["buy"] or evtext["sell"] or evtext["job"])
					SendStupidMessage (ev.source);
				else
					OpenBank (ev.source);
				endif
			elseif (evtext["status"] or evtext["account"])
				var gold_amount := CountGoldInBankbox (ev.source);
				if (!gold_amount)
					PrintTextAbovePrivate (me, "You have no gold in your account.", ev.source);
				else
					PrintTextAbovePrivate (me, "You have " + gold_amount + " gold in your account.", ev.source);
				endif
			elseif (evtext["withdraw"])
				var splitted := SplitWords (evtext);
				if (len (splitted) == 2 and splitted[1] == "withdraw")
					if (splitted[2] == "all")
						WithdrawFromBank (ev.source, CountGoldInBankbox(ev.source));
					elseif (CINT (splitted[2]))
						WithdrawFromBank (ev.source, CINT (splitted[2]));
					endif
				endif
			elseif (evtext["deposit"])
				var splitted := SplitWords (evtext);
				if (len (splitted) == 2 and splitted[1] == "deposit")
					if (splitted[2] == "all")
						DepositIntoBank (ev.source, ev.source.gold);
					elseif ( CINT (splitted[2]))
						DepositIntoBank (ev.source, CINT (splitted[2]));
					endif
				endif
			else
				check_speech (ev.text, ev.source);
			endif
		endif
	endwhile

endprogram




///////////////////
//  Does the actual opening of the bankbox
///////////////////

function OpenBank (you)
	TurnToward (you);
	if (you.criminal)
		Say ("Crook!");
		return;
	endif
	
	var bankbox := FindBankBox (you.acctname);
	if (bankbox)
		var items := EnumerateItemsInContainer (bankbox);
		PrintTextAbovePrivate (me, "You have " + len(items) + " items in your bankbox.", you);
		PrintTextAbovePrivate (me, "Your bankbox weight " + bankbox.weight + " stone.", you);
		SendOpenSpecialContainer (you, bankbox);
	else
		say ("You don't seem to have a bank box, "+ you.name);
	endif
endfunction




///////////////////
//  For players with annoying spam macros, insult them  :)
///////////////////

function SendStupidMessage (you)
	case (RandomInt(5))
		0:
			say ("What in the hell is that supposed to mean?");
		1:
			say ("Lets try that again, in English this time.");
		2:
			say ("Player english speak should.");
		3:
			say ("Nope, don't think I will.");
		4:
			say ("Um, yeah.");
	endcase
	if (you)
	endif
endfunction




///////////////////
//  counts all the gold the player has in his bankbox
///////////////////

function CountGoldInBankbox (byref you)
	var bankbox := FindBankBox (you.acctname);
	if (!bankbox)
		return 0;
	endif
	
	var gold_count := 0;
	foreach item in EnumerateItemsInContainer (bankbox)
		if (item.objtype == UOBJ_GOLD_COIN)
			gold_count := gold_count + item.amount;
		endif
	endforeach
	return gold_count;
endfunction





function WithdrawFromBank (byref you, amount);
	set_critical (1);
	if (amount > CountGoldInBankbox (you))
		PrintTextAbovePrivate (me, "But you don't have that much in your account!", you);
		set_critical (0);
		return;
	endif
	var bankbox := FindBankBox (you.acctname);
	if (!bankbox)
		set_critical (0);
		return;
	endif

	var tempamount;
	foreach item in EnumerateItemsInContainer (bankbox)
		if (item.objtype == UOBJ_GOLD_COIN)
			if (item.amount > amount)
				tempamount := amount;
			else
				tempamount := item.amount;
			endif
			if (CreateItemInBackpack (you, UOBJ_GOLD_COIN, tempamount) )
				SubtractAmount (item, tempamount);
				amount := amount - tempamount;
			else
				PrintTextAbove (me, "Your backpack is too full to hold any more!", you);
				set_critical (0);
				return;
			endif
			if (!amount)
				PrintTextAbovePrivate (me, "There you go!", you);
				set_critical (0);
				return;
			endif
		endif
	endforeach
	set_critical (0);
endfunction



function DepositIntoBank (byref you, amount);
	set_critical (1);
	if (amount > you.gold)
		PrintTextAbovePrivate (me, "But you don't have that much gold!", you);
		set_critical (0);
		return;
	endif
	var bankbox := FindBankBox (you.acctname);
	if (!bankbox)
		set_critical (0);
		return;
	endif

	var tempamount := amount;
	foreach item in EnumerateItemsInContainer (you.backpack)
		if (!ReserveItem (item))
			SendSysMessage (you, "You're already doing something else.");
			ReleaseItem (item);
			set_critical (0);
			return;
		endif

		if (item.objtype == UOBJ_GOLD_COIN)
			if (item.amount < tempamount)
				if (!MoveItemToContainer (item, bankbox))
					PrintTextAbovePrivate (me, "Your bankbox is full!", you);
					ReleaseItem (item);
					set_critical (0);
					return;
				endif
				tempamount := tempamount - item.amount;
			else
				if (!CreateItemInContainer (bankbox, UOBJ_GOLD_COIN, tempamount))
					PrintTextAbovePrivate (me, "Your bankbox is full!", you);
					ReleaseItem (item);
					set_critical (0);
					return;
				endif
				SubtractAmount (item, tempamount);
				ReleaseItem (item);
				PrintTextAbovePrivate (me, "Thank you, come again!", you);
				set_critical (0);
				return;
			endif
		endif
		ReleaseItem (item);
	endforeach
	PrintTextAbovePrivate (me, "That was strange...", you);
	set_critical (0);
endfunction


