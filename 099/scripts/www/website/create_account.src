use uo;
use os;
use http;
use cfgfile;
use datafile;

include "include/client";
include "include/wodinc";
include "include/objtype";
include "include/utility";
include "include/string";
include "include/accounts";
include "../pkg/items/housing/house";

program request_password ()
	var acctemail := QueryParam ("email");

	//the default accountname is everything before the @
	var acctname := acctemail[1, (find(acctemail, "@", 1)-1)];
	while (acctname ["."])
		acctname ["."] := "";
	endwhile;
	
	if (len (acctname) > 16)
		acctname := acctname [1, 16];
	endif

	var acct := FindAccount (acctname);
	if (acct)
		WriteHTML ("exists");
		return;
	endif

	var acctpass := CreateNewPassword ();
	var ret := CreateAccount (acctname, acctpass, 1);
	if (ret == error)
		WriteHTML ("unable");
		return;
	endif
	
	SetAccountProperty (acctname, "account_email", acctemail);
	WriteHTML (acctname);
	WriteHTML (acctpass);
endprogram



function CreateNewPassword ()
	var newstring := GetRandomCharacter () + GetRandomCharacter () + GetRandomCharacter ();
	newstring := newstring + CSTR (RandomInt (10000));
	return newstring;
endfunction


function GetRandomCharacter ()
	case (RandomInt (26))
		0:	return "a";
		1:	return "b";
		2:	return "c";
		3:	return "d";
		4:	return "e";
		5:	return "f";
		6:	return "g";
		7:	return "h";
		8:	return "i";
		9:	return "j";
		10:	return "k";
		11:	return "l";
		12:	return "m";
		13:	return "n";
		14:	return "o";
		15:	return "p";
		16:	return "q";
		17:	return "r";
		18:	return "s";
		19:	return "t";
		20:	return "u";
		21:	return "v";
		22:	return "w";
		23:	return "x";
		24:	return "y";
		25:	return "z";
	endcase;
	return "icky";
endfunction
