use os;
use uo;
use npc;
use util;
use cfgfile;

include "../pkg/npcs/main_ai/setup/setup";
include "../pkg/npcs/main_ai/main/mainloop_killany";
include "../pkg/npcs/main_ai/main/sleepmode_normal";
include "../pkg/npcs/main_ai/combat/fightmode_normal_default";
include "../pkg/npcs/main_ai/combat/closedistance_default";
include "../pkg/npcs/main_ai/combat/gethelp_default";
include "../pkg/npcs/main_ai/combat/changeopponent_default";

const HALT_THRESHOLD := 8; // how close before he attacks?
drop_anchor();

program KillPlayers()

	if (!me.backpack)
		DoOnCreationSetup ();
	endif
	DoStartupSetup ();

	if (getobjproperty (me, "frozen"))
		me.frozen := 1;
	endif

	SetWarMode (0);
	post_combat ();

	main_AI_loop ();

endprogram


function process_combat_event(ev)
	SpellAttack (ev.source);
	if (ev.type == EVID_DAMAGED)
		if (GetVital (me, "Life") < CINT (GetVitalMaximumValue (me, "Life")/10))
			EraseObjProperty (me, "#flees");
			Flee (ev.source);
		endif
	endif
endfunction


function in_combat_event_loop(opponent)
	SpellAttack (opponent);
endfunction

function post_combat()

	DisableCombatEvents();
	EnableMainEvents();

	SetWarMode ( 0 );
	SetOpponent ( 0 );

	sleep(1);
	look_around();

endfunction

function prepare_for_fight(opponent)
	if (opponent)
	endif

	DisableMainEvents();
	EnableCombatEvents();

endfunction


function SpellAttack (opponent);
	if (!GetObjProperty (me, "#lastspell"))
		SetObjProperty (me, "#lastspell",ReadGameClock() - 2);
	endif

	if (GetObjProperty (me, "#lastspell") > ReadGameClock() )
		return;
	endif
	SetObjProperty (me, "#lastspell", ReadGameClock() + 2);
 
	if (opponent)
		if (distance(me,opponent) < 2)
			var opmagery := CINT (GetAttribute (opponent, ATTRIBUTEID_MAGERY)/15);
			if (opmagery)
				DoDamageByType (me, opponent, opmagery, DAMAGETYPE_MAGIC);
			endif
		endif
	endif

endfunction

