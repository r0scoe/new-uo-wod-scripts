use uo;
use os;

include "include/gumps";
include "include/utility";

program nukeaccount (character, acctname)
	if (!acctname)
		SendSysMessage (character, "Usage: .nukeaccount [acctname]");
		return;
	endif

	var acct := FindAccount (acctname);
	if (!acct)
		SendSysMessage (character, "Invalid account name!");
		return;
	endif

	if (acct.banned)
		SendSysMessage (character, "That account is currently banned.");
		SendSysMessage (character, "Do you want to remove the ban?");
		if (YesNo (character, "Lift ban?"))
			acct.unban ();
			SendSysMessage (character, "The ban has been lifted.");
		else
			SendSysMessage (character, "Canceled.");
		endif
		return;
	endif
	
	for counter := 1 to 7
		var player := acct.GetCharacter (counter);
		if (player)
			SendSysMessage (character, "Character: " + player.name);
			SendSysMessage (character, "Serial: " + player.serial);
		endif
	endfor

	var playtime := acct.GetProp ("online_time");
	SendSysMessage (character, "Total play time: " + playtime);
	
	var lastlogon := acct.GetProp ("lastlogon");
	if (!lastlogon)
		SendSysMessage (character, "Last logon: Unknown");
	else
		var passed_time := ReadGameClock () - lastlogon;
		var days := CINT (passed_time/ (60*60*24) );
		SendSysMessage (character, "Last logon: " + days + " days ago");
	endif

	var housevalue := GetGlobalProperty ("#housevalue of " + acctname);
	if (!housevalue)
		housevalue := 0;
	endif
	SendSysMessage (character, "House Value: " + housevalue);

	if (!YesNo (character, "Ban?"))
		SendSysMessage (character, "Canceled.");
		return;
	endif
	
	acct.ban ();
	SendSysMessage (character, "That account has been banned.");
	SendSysMessage (character, "Use .nukeaccount to remove characters and items");
endprogram