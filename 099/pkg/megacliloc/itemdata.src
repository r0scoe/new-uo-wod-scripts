// Item data generator for tooltip packet
//
// Created by Agata
// natalia_buenota@hotmail.com
// The World of Dreams
//

use uo;
use cfgfile;
use polsys;

include "include/skills";
include "include/math";
include "include/itemtypes";

// Charges: 1049116, 1075217
// Empty: 1042971 (used for name), 1070722, 1114057, 1114778-9, 1150541
program itemdata(xObject)
	// Start of Loop.
	//var itemdesc := ReadConfigFile (":*:itemdesc");
	var allprops := array;
	var prop := struct;
	prop.+ clilocid := 0;
	prop.+ values := array;
	var myvar, myvar2;
	
	myvar := GetObjProperty(xObject, "ownername");
	if (myvar)
		prop.clilocid := 1072304;
		prop.values := array {myvar};
		allprops.append(prop);
	endif
	myvar := GetObjProperty(xObject, "craftername");
	if (myvar)
		prop.clilocid := 1050043;
		prop.values := array {myvar};
		allprops.append(prop);
	endif
	if ( xObject.newbie )
		prop.clilocid := 1038021;
		prop.values := array {};
		allprops.append (prop);
	endif
	if (xObject.isa(POLCLASS_CONTAINER) and !xObject.isa(POLCLASS_CORPSE) and xObject.objtype != UOBJ_POTION_KEG and !(GetObjProperty (xObject, "lockpicking") and xObject.locked))
		if (xObject.objtype == UOBJ_RUNEBOOK)
			// 1049116, 1061837, 1075217, 1076207,
			// 1112590, 
			myvar := GetObjProperty (xObject, "%Charges%");
			prop.clilocid := 1061837;
			prop.values := array {myvar.charges, myvar.max_charges};
			allprops.append (prop);
			prop.clilocid := 1070722;
			prop.values := array {CINT ((GetObjProperty (xObject, "%RuneList%")).size()) + " runes"};
			allprops.append(prop);
		else
			prop.clilocid := 1073839;
			prop.values := array {CINT(xObject.item_count-1), xObject.weight};
			allprops.append (prop);
		endif
	elseif (!xObject.isa(POLCLASS_CORPSE) and !IsSign(xObject))
		prop.clilocid := 1072225;
		prop.values := array {xObject.weight};
		allprops.append (prop);
	endif
	if (IsGargishItem (xObject))
		prop.clilocid := 1111709;
		prop.values := array {};
		allprops.append(prop);
	elseif (IsForAnyRace (xObject))
		prop.clilocid := 1070722;
		prop.values := array {"For Any Race"};
		allprops.append(prop);
	endif
	if (GetObjProperty(xObject, "unidentified"))
		prop.clilocid := 1038000;
		prop.values := array {};
		allprops.append(prop);
	else
		if (xObject.isa (POLCLASS_EQUIPMENT))
			if (xObject.isa(POLCLASS_ARMOR))
				myvar := GetItemDescriptor(xObject.objtype);
				prop.clilocid := 1060448;
				prop.values := array {myvar.ar};
				allprops.append (prop);
				if (xObject.quality > 1.0)
					prop.clilocid := 1149934;
					prop.values := array {"Armor Increase " + CINT ((xObject.quality*100)-100)};
					allprops.append (prop);
				endif
				if (xObject.ar_mod > 0)
					prop.clilocid := 1072382;
					prop.values := array {xObject.ar_mod};
					allprops.append (prop);
				endif
				prop.clilocid := 1080361;
				prop.values := array {xObject.ar};
				allprops.append (prop);
				if (myvar.strrequired)
					prop.clilocid := 1061170;
					prop.values := array {CINT(myvar.strrequired/10)};
					allprops.append (prop);
				endif
				// Have to work on this yet...
//				if (armordesc.DexPenalty)
//					xDesc := xDesc + Html + "-" + CINT(armordesc.DexPenalty/10) + " Dexterity" + "<br>";
//				endif
				if (!IsClothing(xObject))
					if (IsMedableArmor (xObject))
						prop.clilocid := 1060437;
						prop.values := array {};
						allprops.append (prop);
					endif
				endif
			elseif (xObject.isa (POLCLASS_WEAPON))
				if (GetObjProperty(xObject, "silver"))
					prop.clilocid := 1060479;
					prop.values := array {};
					allprops.append (prop);
				endif
				case (GetObjProperty (xObject, "specialweaponeffect"))
					"lightning":
						prop.clilocid := 1060423;
						prop.values := array { "10"};
						allprops.append (prop);		
					"vampire":
						prop.clilocid := 1079698;
						prop.values := array {};
						allprops.append (prop);		
					"dragonslaying":
						prop.clilocid := 1060462;
						prop.values := array {};
						allprops.append (prop);		
					"lizardmanslaying":
						prop.clilocid := 1060467;
						prop.values := array {};
						allprops.append (prop);		
					"ophidianslaying":
						prop.clilocid := 1060469;
						prop.values := array {};
						allprops.append (prop);		
					"orcslaying":
						prop.clilocid := 1060470;
						prop.values := array {};
						allprops.append (prop);		
					"ratmanslaying"://uh oh, no cliloc! Vermin Slayer is 1072505
						prop.clilocid := 1114057;
						prop.values := array {"Ratman Slayer"};
						allprops.append (prop);		
					"terathanslaying":
						prop.clilocid := 1060478;
						prop.values := array {};
						allprops.append (prop);		
					"trollslaying":
						prop.clilocid := 1060480;
						prop.values := array {};
						allprops.append (prop);		
					"vampireslaying"://uh oh, no cliloc!
						prop.clilocid := 1114057;
						prop.values := array {"Vampire Slayer"};
						allprops.append (prop);		
				endcase

				myvar := GetItemDescriptor(xObject.objtype);
				//Damage
				prop.clilocid := 1061168;
				prop.values := array {myvar.MinDamage, myvar.MaxDamage};
				allprops.append (prop);
				//Damage Modifiers
				myvar2 := (xObject.hp * xObject.quality)/xObject.maxhp;
				if (xObject.dmg_mod > 0)
					prop.clilocid := 1060455;
					prop.values := array {"Damage", xObject.dmg_mod};
					allprops.append (prop);
				endif
				if (xObject.quality > 1.0)
					prop.clilocid := 1060401;
					prop.values := array {CINT ((xObject.quality*100)-100)};
					allprops.append (prop);
				endif
				// Modified Damage
				prop.clilocid := 1071371;
				prop.values := array {"Modified Damage", CINT((myvar.MinDamage + xObject.dmg_mod)*myvar2), CINT((myvar.MaxDamage + xObject.dmg_mod)*myvar2)};
				allprops.append (prop);
				//Speed
				prop.clilocid := 1061167;
				prop.values := array {myvar.Speed};
				allprops.append (prop);
				//Range
				if (myvar.MaxRange > 1)
					prop.clilocid := 1061169;
					prop.values := array {myvar.MaxRange};
					allprops.append (prop);
				endif
				//Handedness
				if (myvar.TwoHanded)
					prop.clilocid := 1061171;
				else
					prop.clilocid := 1061824;
				endif
				prop.values := array {};
				allprops.append (prop);	
				//Mage weapon
				if (myvar.BlocksCastingIfInHand == 0)
					prop.clilocid := 1062755;
					prop.values := array {};
					allprops.append (prop);
				endif
				//Skill
				case (xObject.attribute)
					"Swordsmanship": prop.clilocid := 1061172;
					"Macefighting": prop.clilocid := 1061173;
					"Fencing": prop.clilocid := 1061174;
					"Archery": prop.clilocid := 1061175;
					"Throwing": prop.clilocid := 1112075;
					default: prop.clilocid := 1060400;
				endcase
				prop.values := array {};
				allprops.append(prop);
			
			endif
			myvar := GetObjProperty(xObject, "skilladv");
			myvar2 := GetObjProperty (xObject, "skill"+myvar);
			if (myvar2)
				myvar2 := GetSkillName(myvar);
				prop.clilocid := 1060451;
				prop.values := array {myvar2, GetObjProperty (xObject, "skill"+myvar)};
				allprops.append (prop);
			endif
			if (xobject.resist_poison)
				prop.clilocid := 1072385;
				prop.values := array {xObject.resist_poison};
				allprops.append (prop);
			endif
			myvar := GetObjProperty(xObject, "charges");
			if (myvar)
				myvar2 := "";
				if (xobject.resist_fire)
					prop.clilocid := 1072383;
					prop.values := array {xObject.resist_fire};
					allprops.append (prop);
					myvar2 := "f";
				endif
				if (xobject.resist_cold)
					prop.clilocid := 1072384;
					prop.values := array {xObject.resist_cold};
					allprops.append (prop);
					myvar2 := "c";
				endif
				if (xobject.resist_energy)
					prop.clilocid := 1072386;
					prop.values := array {xObject.resist_energy};
					allprops.append (prop);
					myvar2 := "e";
				endif
				if (myvar2 == "")
					// 1017324-1017371, 1049116, 1060487-1060492, 1061837,
					// 1062412-1062416, 1072852-1072853, 1075217, 1076207,
					// 1112590, 
					myvar2 := GetObjProperty(xObject, "itemspellname");
					if (!myvar2)
						prop.clilocid := 1075217;
						prop.values := array {myvar + " Spell"};
						allprops.append (prop);
					else
						case (lower (myvar2))
							"clumsiness":
								prop.clilocid := 1017326;
							"feeblemindedness":
								prop.clilocid := 1017327;
							"weakness":
								prop.clilocid := 1017328;
							"harming":
								prop.clilocid := 1017334;
							"cursing":
								prop.clilocid := 1017335;
							"draining":
								prop.clilocid := 1017339;
							"paralyzation":
								prop.clilocid := 1017340;
							"dispelling":
								prop.clilocid := 1060417;
							"flametongue":
								prop.clilocid := 1060487;
							"lightning":
								prop.clilocid := 1060491;
							default:
								prop.clilocid := 1075217;
						endcase
						if (prop.clilocid == 1075217)
							prop.values := array {myvar + " " + myvar2};
						else
							prop.values := array {myvar};
						endif
						allprops.append (prop);
					endif
				endif
			endif
			//Durability
			prop.clilocid := 1060639;
			prop.values := array {xObject.hp, xObject.maxhp};
			allprops.append (prop);
		elseif (IsMusicalInstrument(xObject))
			myvar := GetObjProperty(xObject, "skillbonus");
			if (myvar)
				prop.clilocid := 1060451;
				prop.values := array {"Barding Skills", myvar};
				allprops.append (prop);
			endif
		elseif (IsJewelry(xObject))
		//1060485, 1060409, 1060432, 1075846, 1075842, 1075844
			myvar := GetObjProperty (xObject, "str");
			if (myvar)
				prop.clilocid := 1060485;
				prop.values := array {myvar};
				allprops.append (prop);
			endif
			myvar := GetObjProperty (xObject, "dex");
			if (myvar)
				prop.clilocid := 1060409;
				prop.values := array {myvar};
				allprops.append (prop);
			endif
			myvar := GetObjProperty (xObject, "int");
			if (myvar)
				prop.clilocid := 1060432;
				prop.values := array {myvar};
				allprops.append (prop);
			endif
		elseif (xObject.isa(POLCLASS_SPELLBOOK))
			prop.clilocid := 1042886;
			prop.values := array {xObject.spells().size()};
			allprops.append (prop);
		elseif (xObject.objtype == 0xA100)
			prop.clilocid := 1042886;
			prop.values := array {NecroSpellCount(xObject)};
			allprops.append (prop);
		elseif (xObject.objtype == 0x1706b)
			prop.clilocid := 1042886;
			prop.values := array {DruidSpellCount(xObject)};
			allprops.append (prop);
		elseif (IsSign(xObject))
			myvar := GetObjProperty (xObject, "housename");
			if (myvar)
				prop.clilocid := 1061639;
				prop.values := array {myvar};
				allprops.append (prop);
			endif
			myvar := GetObjProperty (xObject, "lastownername");
			if (myvar)
				prop.clilocid := 1061640;
				prop.values := array {myvar};
				allprops.append (prop);
			endif
		elseif (IsShipDeed (xObject))
			myvar := GetObjProperty (xObject, "shipname");
			if (myvar)
				prop.clilocid := 1149572;
				prop.values := array {myvar};
				allprops.append (prop);
			else
				prop.clilocid := 1149573;
				prop.values := array {};
				allprops.append (prop);
			endif
			myvar := GetShipTypeCliloc (xObject);
			if (myvar)
				prop.clilocid := myvar;
				prop.values := array {};
				allprops.append (prop);
			endif
		endif
	endif
	return allprops;
endprogram

function NecroSpellCount(book)
	var GreaterFlag := CINT (GetObjProperty (book, "Greater"));
	var LesserFlag := CINT (GetObjProperty (book, "Lesser"));
	var spellcount := 0;
	for i := 1 to 8
		if (FlagCheck (LesserFlag, i))
			spellcount := spellcount + 1;
		endif
		if (FlagCheck (GreaterFlag, i))
			spellcount := spellcount + 1;
		endif
	endfor
	return spellcount;
endfunction

function DruidSpellCount(bag)
	var runes := GetObjProperty (bag, "runes");
	if (runes)
		return runes.size();
	endif
	return 0;
endfunction

function IsSign (item)
	case (item.objtype)
		0xb95:
		0xb96:
		0xbd0:
		0xbd2:
		0xc43:
		0xc44:
		0x1f28:
		0x1f29:
		0x17060:
		0x1708a:
			return 1;
	endcase
	if (item.objtype >= 0xba3 and item.objtype <= 0xc0e)
		return 1;
	elseif (item.objtype >= 0x1297 and item.objtype <= 0x129e)
		return 1;
	endif
	return 0;
endfunction

function IsShipDeed (item)
	if (item.objtype >= 0x16027 and item.objtype <= 0x16030)
		return 1;
	endif
	return 0;
endfunction

function GetShipTypeCliloc (item)
	var shiptype := GetObjProperty (item, "shiptype");
	if (shiptype >= 0x4000 and shiptype <= 0x4047)
		shiptype := shiptype + 0xd000;
	endif
	case (shiptype)
		0x11000:
			return 1116741;
		0x11004:
			return 1116742;
		0x11008:
			return 1116743;
		0x1100c:
			return 1116744;
		0x11010:
			return 1116745;
		0x11014:
			return 1116746;
		0x11018:
			return 1116747;
		0x11024:
			return 1116748;
		0x11030:
			return 1116749;
		0x11040:
			return 1150100;
	endcase
	return 0;
endfunction
