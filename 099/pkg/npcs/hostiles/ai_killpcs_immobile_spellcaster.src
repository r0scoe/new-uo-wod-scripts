use os;
use uo;
use npc;
use util;
use cfgfile;

include "../pkg/npcs/main_ai/setup/setup";
include "../pkg/npcs/main_ai/main/mainloop_killpcs_immobile";
include "../pkg/npcs/main_ai/main/sleepmode_normal";
include "../pkg/npcs/main_ai/combat/fightmode_immobile";
include "../pkg/npcs/main_ai/combat/closedistance_default";
include "../pkg/npcs/main_ai/combat/gethelp_default";

const HALT_THRESHOLD := 8; // how close before he attacks?
drop_anchor();

program KillPlayers()
	if (!me.backpack)
		DoOnCreationSetup ();
	endif
	DoStartupSetup ();

	if (getobjproperty (me, "frozen"))
		me.frozen := 1;
	endif

	post_combat ();
	main_AI_loop ();
endprogram


function process_combat_event (byref ev)
	SpellAttack (ev.source);

	case (ev.type)
		EVID_DAMAGED:
			if (GetVital (me, "Life") < CINT (GetVitalMaximumValue (me, "Life")/2))
				SetObjProperty (me, "#lastspell", ReadGameClock() + 1);
				CastSpell (me, me,":misc_spells:gheal");
				if (me.poisoned)
					CastSpell (me, me, ":poison_spells:cure");
					CastSpell (me, ev.source, ":poison_spells:poison");
				endif
			endif
	endcase
endfunction


function in_combat_event_loop (byref opponent)
	spellattack (opponent);
endfunction

function spellattack (byref opponent)
	if (!GetObjProperty (me, "#lastspell"))
		SetObjProperty (me, "#lastspell", ReadGameClock() + 2);
	endif

	if (GetObjProperty (me, "#lastspell") > ReadGameClock() )
		return;
	endif

	if (GetVital (me, "Mana") < 1000)
		SetObjProperty (me, "#lastspell", ReadGameClock() + 10);
	endif

	if (GetVital (me, "Mana") < 6000 and GetVital (me, "Mana") >= 4000 and GetVital (opponent, "Mana") > 4000 and RandomInt (2))
		if ((GetAttribute (me, "Intelligence") + 20) > GetAttribute (opponent, "Intelligence") and RandomInt (2))
			TurnToward (opponent);
			sleep (1);
			CastSpell (me, opponent, ":misc_spells:manavamp");
			SetObjProperty (me, "#lastspell", ReadGameClock() + 4);
			return;
		endif
	endif

	if (RandomInt (3))
		sleep (1);
		SetObjProperty (me, "#lastspell", ReadGameClock() + 3);
		cast_offensive_spell (me, opponent);
		return;
	endif
endfunction


function post_combat()
	foreach item in ListItemsNearLocation (me.x, me.y, me.z, 1, me.realm)
		if (GetObjProperty (item, "summoned_field"))
			CastSpell (me, me, ":field_spells:dispel_field");
			break;
		endif
	endforeach

	if (GetVital (me, "Life") < CINT (GetVitalMaximumValue (me, "Life")/2))
		CastSpell (me, me, ":misc_spells:gheal");
	endif

	ClearEventQueue ();
	DisableCombatEvents();
	EnableMainEvents();

	SetWarMode ( 0 );
	SetOpponent ( 0 );

	sleep(1);
	look_around();
endfunction

function prepare_for_fight (byref opponent)
	if (!GetObjProperty (me, "mr"))
		CastSpell (me, me, ":misc_spells:reflect");
	endif
	if (opponent)
	endif

	ClearEventQueue ();
	DisableMainEvents();
	EnableCombatEvents();
endfunction
