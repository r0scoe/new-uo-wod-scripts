use uo;
use os;

include "include/utility";
include "include/objtype";

program useshipdeed( character, deed )
	if (DeedAlreadyBuiltFrom (deed))
		PrintTextAbovePrivate( deed, "That ship has already been built.", character );
		return;
	endif

	if (!ReserveItem (deed))
		SendSysMessage (character, "You can't use that right now!");
		return;
	endif
	
	if (character.x > 5120)
		SendSysMessage (character, "You can't place a boat here!");
		if (!character.cmdlevel)
			return;
		endif
		SendSysMessage (character, "But since you're a GM, I'll forgive you.");
	endif

	var shiptype := GetObjProperty (deed, "shiptype");
	if (!shiptype)
		PrintTextAbovePrivate (deed, "That ship deed appears to be broken.", character);
		return;
	endif
	if (shiptype >= 0x4000 and shiptype <= 0x4047)
		shiptype := shiptype + 0xd000;
	endif

	var facing := GetShipCreationFacing (character);
	var where := TargetMultiPlacement (character, shiptype, facing);
	if (!where) 
		if ( deed.graphic == 5363 )
			deed.graphic := 5364;
		elseif ( deed.graphic == 5364 )
			deed.graphic := 5363;
		else
			SendSysMessage (character, "Canceled.");
		endif
		return; 
	endif

	if (where.x == deed.x and where.y == deed.y)
		if ( deed.graphic == 5363 )
			deed.graphic := 5364;
		elseif ( deed.graphic == 5364 )
			deed.graphic := 5363;
		endif
		return;
	endif

	set_critical( 1 );

	if (where.x < character.x-7 or where.y < character.y-7 or
			where.x > character.x+7 or where.y > character.y+7)
		SendSysMessage (character, "That's too far away!");
		if ( deed.graphic == 5363 )
			deed.graphic := 5364;
		elseif ( deed.graphic == 5364 )
			deed.graphic := 5363;
		endif
		return;
	endif
	
	if (!CheckLOSAt (character, where.x, where.y, where.z) )
		SendSysMessage (character, "You can't see that!");
		if ( deed.graphic == 5363 )
			deed.graphic := 5364;
		elseif ( deed.graphic == 5364 )
			deed.graphic := 5363;
		endif
		return;
	endif

	var created := CreateShipKeysAndBuiltDeed (character, shiptype, where.x, where.y, where.z, where.realm);
	if (!created) 
		if ( deed.graphic == 5363 )
			deed.graphic := 5364;
		elseif ( deed.graphic == 5364 )
			deed.graphic := 5363;
		endif
		return; 
	endif

	created.ship.color := deed.color;
	created.ship.hold.color := deed.color;
	foreach compo in (created.ship.hull)
		compo.color := deed.color;
	endforeach
	foreach compo in (created.ship.wheel)
		compo.color := deed.color;
	endforeach
	foreach compo in (created.ship.sails)
		compo.color := deed.color;
	endforeach
	foreach compo in (created.ship.storage)
		compo.color := deed.color;
	endforeach
	foreach compo in (created.ship.weaponslot)
		compo.color := deed.color;
	endforeach

	var deedtype := deed.objtype;

	if (deed.name != "a toy boat" and !deed.name["deed"])
		var shipname := GetObjProperty (deed, "shipname");
		if (!shipname)
			shipname := deed.name;
		endif
		
		if (created.ship.tillerman)
			created.ship.tillerman.name := shipname;
		else
			foreach wheel in (created.ship.wheel)
				wheel.name := shipname;
			endforeach
			created.packkey.name := "a key for the " + shipname;
		endif
	else
		created.packkey.name := "a boat key";
	endif


	created.ship.starboardplank.locked := 1;
	created.ship.portplank.locked := 1;
	created.ship.hold.locked := 1;

	var lockid := GetObjProperty (deed, "lockid");
	if (!lockid)
		lockid := AllocLockId();
	endif
	SetObjProperty (created.ship.starboardplank,	"lockid", lockid );
	SetObjProperty (created.ship.portplank,		"lockid", lockid );
	SetObjProperty (created.ship.hold,			"lockid", lockid );
	SetObjProperty (created.ship.hold,			"owner", character.serial );
	SetObjProperty (created.ship.hold,			"shiptype", deedtype ); 
	SetObjProperty (created.ship.tillerman,		"owner", character.serial );
	SetObjProperty (created.packkey,			"lockid", lockid );
	foreach wheel in (created.ship.wheel)
		SetObjProperty (wheel,			"owner", character.serial );
		SetObjProperty (wheel,			"shiptype", deedtype ); 
		SetObjProperty (wheel,			"lockid", lockid ); 
		SetObjProperty (wheel,			"locked", 1 ); 
		wheel.usescript := ":boat:tillerman";
//		created.ship.tillerman := wheel;
	endforeach


	DestroyItem (deed);

	created.ship.tillerman.usescript := ":boat:tillerman";

endprogram

function GetShipCreationFacing (character)
	case (character.facing)
		0:
		1:
			return CRMULTI_FACING_NORTH;
		2:
		3:
			return CRMULTI_FACING_EAST;
		4:
		5:
			return CRMULTI_FACING_SOUTH;
		6:
		7:
			return CRMULTI_FACING_WEST;
	endcase
	return CRMULTI_FACING_NORTH;
endfunction

function CreateShipKeysAndBuiltDeed( character, shiptype, x, y, z, rlm )

	var packkey := CreateItemInBackpack (character, UOBJ_COPPER_KEY);
	if (!packkey)
		PrintTextAbovePrivate (character, "My backpack is too full!", character);
		return 0;
	endif

	var facing := GetShipCreationFacing (character);
	var ship := CreateMultiAtLocation (x, y, z, shiptype, facing, rlm);
	if (!ship)
		PrintTextAbovePrivate( character, "I can't place the ship there.", character );
		DestroyItem( packkey );
		return 0;
	endif
	SetObjProperty( ship.hold,"owner", character.serial );
	if(!getObjProperty (ship.hold,"owner") and !ship.wheel.size())
		PrintTextAbovePrivate (character, "I can't place the ship there.", character);
		DestroyItem (packkey);
		return 0;
	endif

	var result := struct;
    
	result.+packkey := packkey;
	result.+ship := ship;

	sendsysmessage (character, "All aboard!");
	var sh := GetStandingHeight (ship.x, ship.y, ship.z, ship.realm);
	MoveObjectToLocation( character, ship.x, ship.y, sh.z, ship.realm, MOVEOBJECT_FORCELOCATION );
	return result;

endfunction

function DeedAlreadyBuiltFrom( deed )
	if (GetObjProperty( deed, "builtserial" ))
		return 1;
	else
		return 0;
	endif
endfunction
