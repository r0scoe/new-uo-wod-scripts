use uo;
use os;
use http;
use cfgfile;
use datafile;

include "include/client";
include "include/wodinc";
include "include/objtype";
include "include/utility";
include "include/string";
include "include/accounts";
include "../pkg/items/housing/house";

program request_password ()
	var acctname := QueryParam ("acctname");
	var email := QueryParam ("email");

	if (!acctname or !email)
		WriteHTML ("rejected");
		return;
	endif

	var acct := FindAccount (acctname);
	if (!acct)
		WriteHTML ("rejected");
		return;
	endif

	if (GetConfigFileCmdLevel (acctname))
		WriteHTML ("rejected");
		return;
	endif

	foreach chr in EnumerateOnlineCharacters ()
		if (chr.acctname == acctname)
			WriteHTML ("online");
			return;
		endif
	endforeach

	var account_email := GetAccountProperty (acctname, "account_email");
	if (!account_email or account_email != email)
		WriteHTML ("rejected");
		return;
	endif
	
	var password := CreateNewPassword ();
	acct.SetPassword (password);
	WriteHTML (password);
endprogram



function CreateNewPassword ()
	var newstring := GetRandomCharacter () + GetRandomCharacter () + GetRandomCharacter ();
	newstring := newstring + CSTR (RandomInt (10000));
	return newstring;
endfunction


function GetRandomCharacter ()
	case (RandomInt (26))
		0:	return "a";
		1:	return "b";
		2:	return "c";
		3:	return "d";
		4:	return "e";
		5:	return "f";
		6:	return "g";
		7:	return "h";
		8:	return "i";
		9:	return "j";
		10:	return "k";
		11:	return "l";
		12:	return "m";
		13:	return "n";
		14:	return "o";
		15:	return "p";
		16:	return "q";
		17:	return "r";
		18:	return "s";
		19:	return "t";
		20:	return "u";
		21:	return "v";
		22:	return "w";
		23:	return "x";
		24:	return "y";
		25:	return "z";
	endcase;
	return "icky";
endfunction




///////////////////
//  Get their cmdlevel as defined in gms.cfg
//////////////////

function GetConfigFileCmdLevel (acctname)
	UnloadConfigFile ("::gms");
	var cfgfile := ReadConfigFile ("::gms");
	var elem := FindConfigElem (cfgfile, acctname);
	if (!elem)
		return 0;
	endif
	if (elem.cmdlevel)
		return elem.cmdlevel;
	endif
endfunction


