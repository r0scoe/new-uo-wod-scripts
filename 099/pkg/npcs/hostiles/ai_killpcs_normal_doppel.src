use os;
use uo;
use npc;
use util;
use cfgfile;

include "../pkg/npcs/main_ai/setup/setup";
include "../pkg/npcs/main_ai/main/mainloop_killpcs_normal";
include "../pkg/npcs/main_ai/main/sleepmode_normal";
include "../pkg/npcs/main_ai/combat/fightmode_normal_default";
include "../pkg/npcs/main_ai/combat/closedistance_archer";
include "../pkg/npcs/main_ai/combat/changeopponent_default";
include "../pkg/npcs/main_ai/combat/gethelp_default";

const HALT_THRESHOLD := 8; // how close before he attacks?
drop_anchor();

var num_changes, graphics, will_cast, will_breathe;

program KillPlayers()
	if (!me.backpack)
		DoOnCreationSetup ();
	endif
	DoStartupSetup ();
	DoppelSetup ();

	if (GetObjProperty (me, "frozen"))
		me.frozen := 1;
	endif

	post_combat ();
	main_AI_loop ();
endprogram

function DoppelSetup ()
	var MyTemplateElem := GetNpcTemplateElem (me.npctemplate);
	if (GetObjProperty (me, "#numchanges"))
		num_changes := GetObjProperty (me,"#numchanges");
	else
		num_changes := 0;// I'm on my "native" shape
	endif
	graphics := GetConfigStringArray (MyTemplateElem, "graphics" );
endfunction

function process_combat_event (byref ev)
	spellattack (ev.source);
	if (ev.type == EVID_DAMAGED)
		check_for_change();
		if (will_cast)
			if (GetVital (me, "Life") < CINT (GetVitalMaximumValue (me, "Life")/2))
				CastSpell (me, me, ":misc_spells:gheal");
				if (me.poisoned)
					CastSpell (me, me, ":poison_spells:cure");
				endif
			endif
		endif
		if (GetVital (me, "Life") < CINT (GetVitalMaximumValue (me, "Life")/10))
			EraseObjProperty (me, "#flees");
			Flee (ev.source);
		endif
	endif
endfunction


function in_combat_event_loop (byref opponent)
	spellattack (opponent);
endfunction

function spellattack (byref opponent)
	if (!GetObjProperty (me, "#lastbreath"))
		SetObjProperty (me, "#lastbreath", ReadGameClock() + 5);
	endif

	if (GetObjProperty (me, "#lastbreath") > ReadGameClock() )
		return;
	endif

	if (RandomInt(2))
		sleep (1);
		cast_offensive_spell (me, opponent);
		SetObjProperty (me, "#lastbreath", ReadGameClock() + 5);
	elseif ( (will_breathe) and (randomint(3) == 1) )
		breathe_meteor ();
		SetObjProperty (me, "#lastbreath", ReadGameClock() + 10);
	else
		SetObjProperty (me, "#lastbreath", ReadGameClock() + 5);
	endif
	check_for_change ();
endfunction

function post_combat()
	ClearEventQueue ();
	DisableCombatEvents();
	EnableMainEvents();

	SetWarMode ( 0 );
	SetOpponent ( 0 );

	sleep(1);
	look_around();
endfunction

function prepare_for_fight (byref opponent)
	if (!GetObjProperty (me, "mr"))
		setobjproperty (me, "mr", "1");
	endif
	if (opponent)
	endif

	ClearEventQueue ();
	DisableMainEvents();
	EnableCombatEvents();
endfunction

function breathe_meteor ()
    PerformAction (me, 0x0c);
    foreach mobile in ListMobilesInLineofSight (me, 4)
		var dmg := RandomInt ((CINT(70* GetVital (me, "Life"))/GetVitalMaximumValue (me, "Life")))+5;
		PlayMovingEffect (me, mobile ,MOVING_EFFECT_FIREBALL, 10, 1, 1);
		DoDamageByType (me, mobile, dmg, DAMAGETYPE_FIRE);
	endforeach
endfunction


function check_for_change()
	if (GetVital (me, "Life") < CINT (GetVitalMaximumValue (me, "Life")/5))
		if (num_changes >= len(graphics))
			return;
		else
			num_changes := num_changes + 1;
			SetVital (me, "Life", GetVitalMaximumValue (me, "Life"));
			var parm := splitwords(graphics[num_changes]);
			var form := CINT(parm[1]);
			var clr := CINT(parm[2]);
			will_cast := CINT(parm[4]);
			will_breathe := CINT(parm[3]);
			me.graphic := form;
			me.color := clr;
			printtextabove (me, "The creature changes shape!");
		endif
	endif
endfunction