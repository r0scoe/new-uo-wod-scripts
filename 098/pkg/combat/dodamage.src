use uo;
use os;
use vitals;

include "include/client";
include "include/wodinc";
include "include/effects";
include "../pkg/npcs/npcinfo";

program do_damage (parms)
	var attacker := parms[1];
	var damaged_mobile := parms [2];
	var base_damage := parms[3];
	var damage_type := parms[4];

	if (!damaged_mobile or damaged_mobile.concealed)
		return;
	endif

	//don't reveal hidden pets of offline players
	if (damaged_mobile.hidden)
		if (GetObjProperty (damaged_mobile, "#specialhidden_nodamage"))
			if (!GetObjProperty (damaged_mobile, "guardkill"))
				return;
			endif
		endif
	endif

	//special quest thing
	if (attacker and attacker.npctemplate == ":drocket:snowninja")
		if (GetVital (damaged_mobile, "Life") < base_damage*100)
			MoveObjectToLocation( damaged_mobile, 5748, 2327, 3, realm := _DEFAULT_REALM, flags := MOVEOBJECT_NORMAL );
			EraseObjProperty (damaged_mobile, "#snowball");
			SetVital (damaged_mobile, "Life", GetVitalMaximumValue (damaged_mobile, "Life"));

			broadcastsound();
			case (RandomInt (6))
				0:	broadcast ("A snow ninja totally cuts off " + damaged_mobile.name + "'s head!", FONT_NORMAL, 48);
				1:	broadcast ("A snow ninja demonstrates his Real Ultimate Power on  " + damaged_mobile.name, FONT_NORMAL, 48);
				2:	broadcast ("A snow ninja flips out on " + damaged_mobile.name, FONT_NORMAL, 48);
				3:	broadcast ("A snow ninja doesn't think twice and kills " + damaged_mobile.name, FONT_NORMAL, 48);
				4:	broadcast ("A snow ninja, being very careful and precise, kills " + damaged_mobile.name, FONT_NORMAL, 48);
				5:	broadcast ("A snow ninja kills " + damaged_mobile.name + ", which is braggable", FONT_NORMAL, 48);
			endcase
			return;
		endif
	endif

	//if the attacker is set, set the script controller and add the attacker to the hitlist (if they're a
	//player or player-controlled mobile
	if (attacker and attacker != "nocaster")
		if (!attacker.concealed)
			SetScriptController (attacker);
			AddToHitList (attacker, damaged_mobile);
		else
			SetScriptController (0);
		endif
	else
		SetScriptController (0);
	endif

	if (ProtectedFromDamage (damaged_mobile, damage_type ))
		return;
	endif

	if (StrongVersusDamageType (damaged_mobile, damage_type) )
		base_damage := CINT (base_damage/2);
	elseif (WeakVersusDamageType (damaged_mobile, damage_type) )
		base_damage := CINT (base_damage*1.5);
	endif

	//actually do the damage
	ApplyRawDamage (damaged_mobile, base_damage);
endprogram


function broadcastsound()
	foreach char in enumerateonlinecharacters()
		PlaySoundEffectPrivate( char, 0x101, char );
	endforeach
endfunction




///////////////////
//  Figures out if the target is protected from a certain kind of magical damage
///////////////////

function ProtectedFromDamage (character, type)
	var resistit := 0;
	var charges := 0;
	foreach item in ListEquippedItems (character)
		if (GetObjProperty (item, "resistance"))
			resistit := GetObjproperty (item, "resistance");
			if (resistit == "all")
				resistit := type;
			endif
			if (resistit == type)
				charges := getObjproperty (item, "charges") - 1;
				if (!charges)
					PrintTextAbove (item, "*" + item.desc + " is out of charges!*" );
						var spellname := GetObjProperty (item, "itemspellname");
						if (spellname)
							var itemname := item.desc;
							if (itemname[CSTR ("of " + spellname)])
								itemname[CSTR ("of " + spellname)] := "";
							else
								itemname[CSTR ("and " + spellname)] := "";
							endif
							item.name := itemname;
						endif
						if (GetObjProperty (item, "oldname") )
							var itemname := GetObjProperty (item, "oldname");
							if (itemname[CSTR ("of " + spellname)])
								itemname[CSTR ("of " + spellname)] := "";
							else
								itemname[CSTR ("and " + spellname)] := "";
							endif
							SetObjProperty (item, "oldname", itemname);
						endif

						EraseObjProperty (item, "itemspellname");
						EraseObjProperty (item, "resistance");
						EraseObjProperty (item, "charges");
						return 1;
				else
					PrintTextAbove (item, "*" + item.desc + " absorbs the magical energy!*" );
					SetObjProperty (item, "charges", charges );
					return 1;
				endif
			endif
		endif
	endforeach

	return 0;			
endfunction




///////////////////
//  determines if the given NPC is strong versus a type of magic damage
///////////////////

function StrongVersusDamageType (damaged_mobile, damage_type)
	if (!damaged_mobile.npctemplate)
		return 0;
	endif
	if (damaged_mobile.npctemplate["guard"] or damaged_mobile.script["humuc"])
		return 0;
	endif
	
	var MyTemplateElem := GetNpcTemplateElem (damaged_mobile.npctemplate);
	if (!MyTemplateElem)
		return 0;
	endif

	case (damage_type)
		DAMAGETYPE_FIRE:
			if (MyTemplateElem.fire and MyTemplateElem.fire == "strong")
				PlayObjectCenteredEffect (damaged_mobile, EFFECT_RESIST, 10, 10);
				return 1;
			endif
		DAMAGETYPE_COLD:
			if (MyTemplateElem.cold and MyTemplateElem.cold == "strong")
				PlayObjectCenteredEffect (damaged_mobile, EFFECT_RESIST, 10, 10);
				return 1;
			endif
		DAMAGETYPE_ELECTRICAL:
			if (MyTemplateElem.electrical and MyTemplateElem.electrical == "strong")
				PlayObjectCenteredEffect (damaged_mobile, EFFECT_RESIST, 10, 10);
				return 1;
			endif
	endcase
	return 0;
endfunction




///////////////////
//  determines if the given NPC is weak versus a type of magic damage
///////////////////

function WeakVersusDamageType (damaged_mobile, damage_type)
	if (!damaged_mobile.npctemplate)
		return 0;
	endif
	if (damaged_mobile.npctemplate["guard"] or damaged_mobile.script["humuc"])
		return 0;
	endif
	
	var MyTemplateElem := GetNpcTemplateElem (damaged_mobile.npctemplate);
	if (!MyTemplateElem)
		return 0;
	endif

	case (damage_type)
		DAMAGETYPE_FIRE:
			if (MyTemplateElem.fire and MyTemplateElem.fire == "weak")
				PlayObjectCenteredEffect (damaged_mobile, EFFECT_FIZZLE, 10, 10);
				return 1;
			endif
		DAMAGETYPE_COLD:
			if (MyTemplateElem.cold and MyTemplateElem.cold == "weak")
				PlayObjectCenteredEffect (damaged_mobile, EFFECT_FIZZLE, 10, 10);
				return 1;
			endif
		DAMAGETYPE_ELECTRICAL:
			if (MyTemplateElem.electrical and MyTemplateElem.electrical == "weak")
				PlayObjectCenteredEffect (damaged_mobile, EFFECT_FIZZLE, 10, 10);
				return 1;
			endif
	endcase
	return 0;
endfunction








