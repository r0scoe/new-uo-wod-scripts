use os;
use uo;

include "include/utility";
include "include/objtype";
include "../pkg/items/boat/plankutil";
include "../pkg/world/weather/weather";

var shiptype := 0;
var shipheight := 0;

program usemooringline (mob, mooringline)
	set_critical(1); 

	if (mob.multi == mooringline.multi)
		shiptype := mooringline.multi.multiid;
		if (shiptype >= 0x18 and shiptype <= 0x23)
			shipheight := 14;
		elseif (shiptype >= 0x24 and shiptype <= 0x2f)
			shipheight := 16;
		elseif (shiptype >= 0x30 and shiptype <= 0x3b)
			shipheight := 7;
		elseif (shiptype >= 0x40 and shiptype <= 0x47)
			shipheight := 18;
		else
			return;
		endif
		GetOutOfBoat (mob, mooringline);
	else
		var wheel := mooringline.multi.wheel[1];
		var locked := GetObjProperty(wheel, "locked");
		if(FindKey (mob, mooringline.multi.hold) or (!locked))
			YankOntoBoat (mob, mooringline);
		else
			//they're on shore with no key and the ship is locked
			PrintTextAbovePrivate( mooringline, "That is locked.", mob );
		endif
	endif
	set_critical (0); 
endprogram


///////////////////
//  If the plank is extended, move the mob onto the boat
///////////////////

function YankOntoBoat (mob, plank)
	MoveObjectToLocation( mob, plank.x, plank.y, plank.z, plank.realm, MOVEOBJECT_FORCELOCATION);
	SetWeatherForPlayer (mob);
endfunction

var searchoffset := array{
   array{ -2,  0 },          //  1
   array{ -2, -1 },
   array{ -2, +1 },
   array{ -2, -2 },
   array{ -3, -2 },          //  5
   array{ -3, -1 },
   array{ -3,  0 },
   array{ -3, +1 },
   array{ -3, +2 },
   array{ -2, +2 },          // 10
   array{ -2, -3 },
   array{ -3, -3 },
   array{ -4, -3 },
   array{ -4, -2 },
   array{ -4, -1 },          // 15
   array{ -4,  0 },
   array{ -4, +1 },
   array{ -4, +2 },
   array{ -4, +3 },
   array{ -3, +3 },          // 20
   array{ -2, +3 },
   array{ -5,  0 },
   array{ -5, +2 },
   array{ -5, +3 },
   array{ -5, +4 },
   array{ -4, +4 },          // 20
   array{ -3, +4 },
   array{ -6,  0 },
   array{ -6, +3 },
   array{ -6, +4 },
   array{ -6, +5 },
   array{ -5, +5 },          // 20
   array{ -4, +5 }
};

function GetOutOfBoat( who, plank)
	if (plank)
	endif
    var xidx, yidx, xmul, ymul, i;
    for (i := 0; i < 4; i := i+1)
	case (i)
		0:
			xidx := 1;
			yidx := 2;
			xmul := 1;
			ymul := 1;
        
		1:
			xidx := 1;
			yidx := 2;
			xmul := -1; // flip across x-axis
			ymul := 1;

		2:
			xidx := 2;
			yidx := 1;
			xmul := 1;
			ymul := +1;
           
		3:
			xidx := 2;
			yidx := 1;
			xmul := 1;
			ymul := -1; // flip across y-axis
        
	endcase

	foreach offset in searchoffset
		if (TryMove( who, offset[xidx] * xmul, offset[yidx] * ymul ))
			return;
		endif        
	endforeach
    endfor
    // gah, can't get off the ship!
endfunction

function TryMove( who, dx, dy )
    var res := 0;
    set_critical( 1 );

    var tryx := who.x + dx;
    var tryy := who.y + dy;
    // print( "Trying (" + tryx + "," + tryy + ")" );
    var h := GetStandingHeight( tryx, tryy, who.z-shipheight, who.realm );
    if (h and (not h.multi)) // CHECKME should check line of sight?
		MoveObjectToLocation( who, tryx, tryy, h.z, who.realm, MOVEOBJECT_FORCELOCATION );
		SetWeatherForPlayer (who);
        res := 1;
    endif

    set_critical(0);
    return res;
endfunction
